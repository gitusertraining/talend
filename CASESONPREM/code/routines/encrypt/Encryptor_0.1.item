package routines;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import javax.xml.bind.DatatypeConverter;

import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;
import org.jasypt.iv.RandomIvGenerator;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class Encryptor {

	static StandardPBEByteEncryptor encryptor;
	static String key;

	public static void init() {
		encryptor = new StandardPBEByteEncryptor();
		encryptor.setAlgorithm("PBEWithHmacSHA512AndAES_256");
		encryptor.setIvGenerator(new RandomIvGenerator());
		//TODO
		encryptor.setPassword("@talend_secret_dps@");
	}

	/**
	 * Converts an unencrypted value in an encrypted one using Jasypt
	 * encryptionlibrary
	 *
	 * {talendTypes} String | String
	 *
	 * {Category} StringHandling
	 *
	 * {param} String value: String value
	 *
	 * {example} secretpassword=ENC(x1387yx=)
	 *
	 */
	public static String encrypt(String message) {
		return ("ENC(" + DatatypeConverter.printBase64Binary(encryptor.encrypt(message.getBytes())) + ")").replace("=",
				";");

	}

	/**
	 * Converts an encrypted value in an unencrypted one using Jasypt
	 * encryptionlibrary
	 *
	 * {talendTypes} String | String
	 *
	 * {Category} StringHandling
	 *
	 * {param} String value: String value
	 *
	 * {example} ENC(x1387yx=):secretpassword
	 *
	 */
	public static String decrypt(String message) {

		// String encrypted = message.substring(4, message.length()-1); No Index out of
		// bounds safe
//    	if (message.startsWith("ENC("))
//    		System.out.println("We are decrypting " + message);
//    	else
//    		System.out.println("We are NOT decrypting " + message);
		return message.startsWith("ENC(") ? new String(encryptor.decrypt(
				DatatypeConverter.parseBase64Binary(message.replace(";", "=").substring(4, message.length() - 1))))
				: message;

	}

}
